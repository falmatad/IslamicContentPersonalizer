{"ast":null,"code":"var _jsxFileName = \"/Users/User/Desktop/Development/GitHubFolder/MyReactTemplate/PortfolioProject/ProjectKnowYourLordLikeHashim/client/src/component/wizard/TopNavigation.js\";\nimport React, { Component, Fragment } from \"react\";\nimport { WithWizard } from 'react-albus';\nimport { NavLink } from \"react-router-dom\";\nexport class TopNavigation extends Component {\n  constructor(props) {\n    super(props);\n    this.getClassName = this.getClassName.bind(this);\n    this.itemClick = this.itemClick.bind(this);\n  }\n\n  getClassName(steps, step, index, stepItem) {\n    if (steps.indexOf(step) === index) {\n      return \"step-doing\";\n    } else if (steps.indexOf(step) > index || stepItem.isDone) {\n      stepItem.isDone = true;\n      return \"step-done\";\n    }\n  }\n\n  itemClick(stepItem, push) {\n    if (this.props.disableNav) {\n      return;\n    }\n\n    this.props.topNavClick(stepItem, push);\n  }\n\n  render() {\n    return React.createElement(WithWizard, {\n      render: ({\n        next,\n        previous,\n        step,\n        steps,\n        go,\n        push\n      }) => React.createElement(\"ul\", {\n        className: \"nav nav-tabs \" + this.props.className + (this.props.disableNav ? \" disabled\" : \"\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, steps.map((stepItem, index) => {\n        if (!stepItem.hideTopNav) {\n          return React.createElement(\"li\", {\n            key: index,\n            className: \"nav-item \" + this.getClassName(steps, step, index, stepItem),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 35\n            },\n            __self: this\n          }, React.createElement(NavLink, {\n            to: \"#\",\n            location: {},\n            className: \"nav-link\",\n            onClick: () => this.itemClick(stepItem, push),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 36\n            },\n            __self: this\n          }, React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 37\n            },\n            __self: this\n          }, stepItem.name), React.createElement(\"small\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 38\n            },\n            __self: this\n          }, stepItem.desc)));\n        } else {\n          return React.createElement(Fragment, {\n            key: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 43\n            },\n            __self: this\n          });\n        }\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/User/Desktop/Development/GitHubFolder/MyReactTemplate/PortfolioProject/ProjectKnowYourLordLikeHashim/client/src/component/wizard/TopNavigation.js"],"names":["React","Component","Fragment","WithWizard","NavLink","TopNavigation","constructor","props","getClassName","bind","itemClick","steps","step","index","stepItem","indexOf","isDone","push","disableNav","topNavClick","render","next","previous","go","className","map","hideTopNav","name","desc"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,aAA3B;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,OAAO,MAAMC,aAAN,SAA4BJ,SAA5B,CAAsC;AAC3CK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,SAAL,GAAiB,KAAKA,SAAL,CAAeD,IAAf,CAAoB,IAApB,CAAjB;AACD;;AAEDD,EAAAA,YAAY,CAACG,KAAD,EAAQC,IAAR,EAAcC,KAAd,EAAqBC,QAArB,EAA+B;AACzC,QAAIH,KAAK,CAACI,OAAN,CAAcH,IAAd,MAAwBC,KAA5B,EAAmC;AACjC,aAAO,YAAP;AACD,KAFD,MAEO,IAAIF,KAAK,CAACI,OAAN,CAAcH,IAAd,IAAsBC,KAAtB,IAA+BC,QAAQ,CAACE,MAA5C,EAAoD;AACzDF,MAAAA,QAAQ,CAACE,MAAT,GAAkB,IAAlB;AACA,aAAO,WAAP;AACD;AACF;;AAEDN,EAAAA,SAAS,CAACI,QAAD,EAAWG,IAAX,EAAiB;AACxB,QAAI,KAAKV,KAAL,CAAWW,UAAf,EAA2B;AACzB;AACD;;AACD,SAAKX,KAAL,CAAWY,WAAX,CAAuBL,QAAvB,EAAiCG,IAAjC;AACD;;AAEDG,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,UAAD;AAAY,MAAA,MAAM,EAAE,CAAC;AAAEC,QAAAA,IAAF;AAAQC,QAAAA,QAAR;AAAkBV,QAAAA,IAAlB;AAAwBD,QAAAA,KAAxB;AAA+BY,QAAAA,EAA/B;AAAmCN,QAAAA;AAAnC,OAAD,KAClB;AAAI,QAAA,SAAS,EAAE,kBAAkB,KAAKV,KAAL,CAAWiB,SAA7B,IAA0C,KAAKjB,KAAL,CAAWW,UAAX,GAAwB,WAAxB,GAAsC,EAAhF,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEIP,KAAK,CAACc,GAAN,CAAU,CAACX,QAAD,EAAWD,KAAX,KAAqB;AAC7B,YAAI,CAACC,QAAQ,CAACY,UAAd,EAA0B;AACxB,iBACE;AAAI,YAAA,GAAG,EAAEb,KAAT;AAAgB,YAAA,SAAS,EAAE,cAAc,KAAKL,YAAL,CAAkBG,KAAlB,EAAyBC,IAAzB,EAA+BC,KAA/B,EAAsCC,QAAtC,CAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE,oBAAC,OAAD;AAAS,YAAA,EAAE,EAAC,GAAZ;AAAgB,YAAA,QAAQ,EAAE,EAA1B;AAA8B,YAAA,SAAS,EAAC,UAAxC;AAAmD,YAAA,OAAO,EAAE,MAAM,KAAKJ,SAAL,CAAeI,QAAf,EAAyBG,IAAzB,CAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAOH,QAAQ,CAACa,IAAhB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAQb,QAAQ,CAACc,IAAjB,CAFF,CADF,CADF;AAQD,SATD,MASO;AACL,iBAAO,oBAAC,QAAD;AAAU,YAAA,GAAG,EAAEf,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;AACF,OAbD,CAFJ,CADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAsBD;;AA9C0C","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport { WithWizard } from 'react-albus';\nimport { NavLink } from \"react-router-dom\";\nexport class TopNavigation extends Component {\n  constructor(props) {\n    super(props);\n    this.getClassName = this.getClassName.bind(this);\n    this.itemClick = this.itemClick.bind(this);\n  }\n\n  getClassName(steps, step, index, stepItem) {\n    if (steps.indexOf(step) === index) {\n      return \"step-doing\";\n    } else if (steps.indexOf(step) > index || stepItem.isDone) {\n      stepItem.isDone = true;\n      return \"step-done\";\n    }\n  }\n\n  itemClick(stepItem, push) {\n    if (this.props.disableNav) {\n      return;\n    }\n    this.props.topNavClick(stepItem, push)\n  }\n\n  render() {\n    return (\n      <WithWizard render={({ next, previous, step, steps, go, push }) => (\n        <ul className={\"nav nav-tabs \" + this.props.className + (this.props.disableNav ? \" disabled\" : \"\")}>\n          {\n            steps.map((stepItem, index) => {\n              if (!stepItem.hideTopNav) {\n                return (\n                  <li key={index} className={\"nav-item \" + this.getClassName(steps, step, index, stepItem)}>\n                    <NavLink to=\"#\" location={{}} className=\"nav-link\" onClick={() => this.itemClick(stepItem, push)}>\n                      <span>{stepItem.name}</span>\n                      <small>{stepItem.desc}</small>\n                    </NavLink>\n                  </li>\n                )\n              } else {\n                return <Fragment key={index} />\n              }\n            })\n          }\n        </ul>\n      )} />\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}